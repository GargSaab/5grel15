/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"errors"
)



type RangingSlPosQos struct {

	// Indicates value of accuracy.
	HAccuracy float32 `json:"hAccuracy,omitempty"`

	// Indicates value of accuracy.
	VAccuracy float32 `json:"vAccuracy,omitempty"`

	// Indicates value of accuracy.
	RelativeHAccuracy float32 `json:"relativeHAccuracy,omitempty"`

	// Indicates value of accuracy.
	RelativeVAccuracy float32 `json:"relativeVAccuracy,omitempty"`

	// Indicates value of accuracy.
	DistanceAccuracy float32 `json:"distanceAccuracy,omitempty"`

	// Indicates value of accuracy.
	DirectionAccuracy float32 `json:"directionAccuracy,omitempty"`

	VerticalRequested bool `json:"verticalRequested,omitempty"`

	ResponseTime ResponseTime `json:"responseTime,omitempty"`

	LcsQosClass LcsQosClass `json:"lcsQosClass,omitempty"`
}

// AssertRangingSlPosQosRequired checks if the required fields are not zero-ed
func AssertRangingSlPosQosRequired(obj RangingSlPosQos) error {
	if err := AssertResponseTimeRequired(obj.ResponseTime); err != nil {
		return err
	}
	if err := AssertLcsQosClassRequired(obj.LcsQosClass); err != nil {
		return err
	}
	return nil
}

// AssertRangingSlPosQosConstraints checks if the values respects the defined constraints
func AssertRangingSlPosQosConstraints(obj RangingSlPosQos) error {
	if obj.HAccuracy < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.VAccuracy < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.RelativeHAccuracy < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.RelativeVAccuracy < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.DistanceAccuracy < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.DirectionAccuracy < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
