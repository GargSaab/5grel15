/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"errors"
)



// ServiceAreaRestriction - Provides information about allowed or not allowed areas.
type ServiceAreaRestriction struct {

	RestrictionType RestrictionType `json:"restrictionType,omitempty"`

	Areas []Area `json:"areas,omitempty"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	MaxNumOfTAs int32 `json:"maxNumOfTAs,omitempty"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	MaxNumOfTAsForNotAllowedAreas int32 `json:"maxNumOfTAsForNotAllowedAreas,omitempty"`
}

// AssertServiceAreaRestrictionRequired checks if the required fields are not zero-ed
func AssertServiceAreaRestrictionRequired(obj ServiceAreaRestriction) error {
	if err := AssertRestrictionTypeRequired(obj.RestrictionType); err != nil {
		return err
	}
	for _, el := range obj.Areas {
		if err := AssertAreaRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertServiceAreaRestrictionConstraints checks if the values respects the defined constraints
func AssertServiceAreaRestrictionConstraints(obj ServiceAreaRestriction) error {
	if obj.MaxNumOfTAs < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.MaxNumOfTAsForNotAllowedAreas < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
