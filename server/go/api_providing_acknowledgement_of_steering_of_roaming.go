/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"errors"
	"io"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// ProvidingAcknowledgementOfSteeringOfRoamingAPIController binds http requests to an api service and writes the service results to the http response
type ProvidingAcknowledgementOfSteeringOfRoamingAPIController struct {
	service      ProvidingAcknowledgementOfSteeringOfRoamingAPIServicer
	errorHandler ErrorHandler
}

// ProvidingAcknowledgementOfSteeringOfRoamingAPIOption for how the controller is set up.
type ProvidingAcknowledgementOfSteeringOfRoamingAPIOption func(*ProvidingAcknowledgementOfSteeringOfRoamingAPIController)

// WithProvidingAcknowledgementOfSteeringOfRoamingAPIErrorHandler inject ErrorHandler into controller
func WithProvidingAcknowledgementOfSteeringOfRoamingAPIErrorHandler(h ErrorHandler) ProvidingAcknowledgementOfSteeringOfRoamingAPIOption {
	return func(c *ProvidingAcknowledgementOfSteeringOfRoamingAPIController) {
		c.errorHandler = h
	}
}

// NewProvidingAcknowledgementOfSteeringOfRoamingAPIController creates a default api controller
func NewProvidingAcknowledgementOfSteeringOfRoamingAPIController(s ProvidingAcknowledgementOfSteeringOfRoamingAPIServicer, opts ...ProvidingAcknowledgementOfSteeringOfRoamingAPIOption) Router {
	controller := &ProvidingAcknowledgementOfSteeringOfRoamingAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the ProvidingAcknowledgementOfSteeringOfRoamingAPIController
func (c *ProvidingAcknowledgementOfSteeringOfRoamingAPIController) Routes() Routes {
	return Routes{
		"SorAckInfo": Route{
			strings.ToUpper("Put"),
			"/nudm-sdm/v2/{supi}/am-data/sor-ack",
			c.SorAckInfo,
		},
	}
}

// SorAckInfo - Nudm_Sdm Info service operation
func (c *ProvidingAcknowledgementOfSteeringOfRoamingAPIController) SorAckInfo(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	supiParam := params["supi"]
	if supiParam == "" {
		c.errorHandler(w, r, &RequiredError{"supi"}, nil)
		return
	}
	acknowledgeInfoParam := AcknowledgeInfo{}
	d := json.NewDecoder(r.Body)
	d.DisallowUnknownFields()
	if err := d.Decode(&acknowledgeInfoParam); err != nil && !errors.Is(err, io.EOF) {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	if err := AssertAcknowledgeInfoRequired(acknowledgeInfoParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	if err := AssertAcknowledgeInfoConstraints(acknowledgeInfoParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	result, err := c.service.SorAckInfo(r.Context(), supiParam, acknowledgeInfoParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
