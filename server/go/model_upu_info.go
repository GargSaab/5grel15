/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"time"
)



type UpuInfo struct {

	UpuDataList []UpuData `json:"upuDataList,omitempty"`

	UpuRegInd bool `json:"upuRegInd,omitempty"`

	// Contains the indication of whether the acknowledgement from UE is needed.
	UpuAckInd bool `json:"upuAckInd,omitempty"`

	// MAC value for protecting UPU procedure (UPU-MAC-IAUSF and UPU-MAC-IUE).
	UpuMacIausf string `json:"upuMacIausf,omitempty"`

	// CounterUPU.
	CounterUpu string `json:"counterUpu,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	ProvisioningTime time.Time `json:"provisioningTime"`

	// string with format 'bytes' as defined in OpenAPI
	UpuTransparentContainer string `json:"upuTransparentContainer,omitempty"`
}

// AssertUpuInfoRequired checks if the required fields are not zero-ed
func AssertUpuInfoRequired(obj UpuInfo) error {
	elements := map[string]interface{}{
		"provisioningTime": obj.ProvisioningTime,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.UpuDataList {
		if err := AssertUpuDataRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertUpuInfoConstraints checks if the values respects the defined constraints
func AssertUpuInfoConstraints(obj UpuInfo) error {
	return nil
}
