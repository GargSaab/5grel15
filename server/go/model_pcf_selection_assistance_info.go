/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type PcfSelectionAssistanceInfo struct {

	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn string `json:"dnn"`

	SingleNssai Snssai `json:"singleNssai"`
}

// AssertPcfSelectionAssistanceInfoRequired checks if the required fields are not zero-ed
func AssertPcfSelectionAssistanceInfoRequired(obj PcfSelectionAssistanceInfo) error {
	elements := map[string]interface{}{
		"dnn": obj.Dnn,
		"singleNssai": obj.SingleNssai,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertSnssaiRequired(obj.SingleNssai); err != nil {
		return err
	}
	return nil
}

// AssertPcfSelectionAssistanceInfoConstraints checks if the values respects the defined constraints
func AssertPcfSelectionAssistanceInfoConstraints(obj PcfSelectionAssistanceInfo) error {
	return nil
}
