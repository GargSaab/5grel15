/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type DnnInfo struct {

	Dnn AccessAndMobilitySubscriptionDataSubscribedDnnListInner `json:"dnn"`

	DefaultDnnIndicator bool `json:"defaultDnnIndicator,omitempty"`

	LboRoamingAllowed bool `json:"lboRoamingAllowed,omitempty"`

	IwkEpsInd bool `json:"iwkEpsInd,omitempty"`

	DnnBarred bool `json:"dnnBarred,omitempty"`

	InvokeNefInd bool `json:"invokeNefInd,omitempty"`

	SmfList []string `json:"smfList,omitempty"`

	SameSmfInd bool `json:"sameSmfInd,omitempty"`

	HrSboAllowed bool `json:"hrSboAllowed,omitempty"`
}

// AssertDnnInfoRequired checks if the required fields are not zero-ed
func AssertDnnInfoRequired(obj DnnInfo) error {
	elements := map[string]interface{}{
		"dnn": obj.Dnn,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertAccessAndMobilitySubscriptionDataSubscribedDnnListInnerRequired(obj.Dnn); err != nil {
		return err
	}
	return nil
}

// AssertDnnInfoConstraints checks if the values respects the defined constraints
func AssertDnnInfoConstraints(obj DnnInfo) error {
	return nil
}
