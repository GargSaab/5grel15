/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"errors"
)



// Arp - Contains Allocation and Retention Priority information.
type Arp struct {

	// nullable true shall not be used for this attribute. Unsigned integer indicating the ARP Priority Level (see clause 5.7.2.2 of 3GPP TS 23.501, within the range 1 to 15.Values are ordered in decreasing order of priority, i.e. with 1 as the highest priority and 15 as the lowest priority.  
	PriorityLevel *int32 `json:"priorityLevel"`

	PreemptCap PreemptionCapability `json:"preemptCap"`

	PreemptVuln PreemptionVulnerability `json:"preemptVuln"`
}

// AssertArpRequired checks if the required fields are not zero-ed
func AssertArpRequired(obj Arp) error {
	elements := map[string]interface{}{
		"priorityLevel": obj.PriorityLevel,
		"preemptCap": obj.PreemptCap,
		"preemptVuln": obj.PreemptVuln,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertPreemptionCapabilityRequired(obj.PreemptCap); err != nil {
		return err
	}
	if err := AssertPreemptionVulnerabilityRequired(obj.PreemptVuln); err != nil {
		return err
	}
	return nil
}

// AssertArpConstraints checks if the values respects the defined constraints
func AssertArpConstraints(obj Arp) error {
	if obj.PriorityLevel != nil && *obj.PriorityLevel < 1 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.PriorityLevel != nil && *obj.PriorityLevel > 15 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
